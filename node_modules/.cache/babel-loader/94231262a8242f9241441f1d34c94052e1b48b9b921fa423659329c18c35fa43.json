{"ast":null,"code":"import toast from \"react-hot-toast\";\nexport const showToast = function (message) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"error\";\n  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4000;\n  toast[type](message, {\n    duration\n  });\n};\nexport const errorHandler = error => {\n  var _error$reason;\n  showToast(error !== null && error !== void 0 && (_error$reason = error.reason) !== null && _error$reason !== void 0 && _error$reason.length ? error === null || error === void 0 ? void 0 : error.reason : \"Something went wrong, Try again after some time.\");\n};\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, \"0\");\n}\nexport function convertMsToTime(ms) {\n  if (!ms) {\n    return \"\";\n  }\n  let seconds = Math.floor(ms / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  seconds %= 60;\n  minutes %= 60;\n  hours %= 24;\n  if (!hours) {\n    return \"\".concat(padTo2Digits(minutes), \" min \").concat(padTo2Digits(seconds), \" sec\");\n  } else {\n    return \"\".concat(padTo2Digits(hours), \" hr \").concat(padTo2Digits(minutes), \" min\");\n  }\n}","map":{"version":3,"names":["toast","showToast","message","type","arguments","length","undefined","duration","errorHandler","error","_error$reason","reason","padTo2Digits","num","toString","padStart","convertMsToTime","ms","seconds","Math","floor","minutes","hours","concat"],"sources":["D:/Programming/VS Code/QTify_Box/src/config/helper-methods.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\nexport const showToast = (message, type = \"error\", duration = 4000) => {\r\n\ttoast[type](message, { duration });\r\n};\r\n\r\nexport const errorHandler = (error) => {\r\n\tshowToast(\r\n\t\terror?.reason?.length\r\n\t\t\t? error?.reason\r\n\t\t\t: \"Something went wrong, Try again after some time.\"\r\n\t);\r\n};\r\n\r\nfunction padTo2Digits(num) {\r\n\treturn num.toString().padStart(2, \"0\");\r\n}\r\n\r\nexport function convertMsToTime(ms) {\r\n\tif (!ms) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tlet seconds = Math.floor(ms / 1000);\r\n\tlet minutes = Math.floor(seconds / 60);\r\n\tlet hours = Math.floor(minutes / 60);\r\n\r\n\tseconds %= 60;\r\n\tminutes %= 60;\r\n\thours %= 24;\r\n\r\n\tif (!hours) {\r\n\t\treturn `${padTo2Digits(minutes)} min ${padTo2Digits(seconds)} sec`;\r\n\t} else {\r\n\t\treturn `${padTo2Digits(hours)} hr ${padTo2Digits(minutes)} min`;\r\n\t}\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,MAAMC,SAAS,GAAG,SAAAA,CAACC,OAAO,EAAsC;EAAA,IAApCC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACjEJ,KAAK,CAACG,IAAI,CAAC,CAACD,OAAO,EAAE;IAAEK;EAAS,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA,IAAAC,aAAA;EACtCT,SAAS,CACRQ,KAAK,aAALA,KAAK,gBAAAC,aAAA,GAALD,KAAK,CAAEE,MAAM,cAAAD,aAAA,eAAbA,aAAA,CAAeL,MAAM,GAClBI,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,MAAM,GACb,kDACJ,CAAC;AACF,CAAC;AAED,SAASC,YAAYA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACvC;AAEA,OAAO,SAASC,eAAeA,CAACC,EAAE,EAAE;EACnC,IAAI,CAACA,EAAE,EAAE;IACR,OAAO,EAAE;EACV;EAEA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,IAAI,CAAC;EACnC,IAAII,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,IAAII,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EAEpCH,OAAO,IAAI,EAAE;EACbG,OAAO,IAAI,EAAE;EACbC,KAAK,IAAI,EAAE;EAEX,IAAI,CAACA,KAAK,EAAE;IACX,UAAAC,MAAA,CAAUX,YAAY,CAACS,OAAO,CAAC,WAAAE,MAAA,CAAQX,YAAY,CAACM,OAAO,CAAC;EAC7D,CAAC,MAAM;IACN,UAAAK,MAAA,CAAUX,YAAY,CAACU,KAAK,CAAC,UAAAC,MAAA,CAAOX,YAAY,CAACS,OAAO,CAAC;EAC1D;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}