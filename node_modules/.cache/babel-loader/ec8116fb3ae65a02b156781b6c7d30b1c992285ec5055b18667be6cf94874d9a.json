{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\VS Code\\\\QTify_Box\\\\src\\\\components\\\\FilterTabs\\\\FilterTabs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport Section from \"../Section/Section\";\nimport styles from \"./FilterTabs.module.css\";\nimport { allSongsTabs } from \"../../config/helper-config\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterTabs = _ref => {\n  _s();\n  let {\n    data,\n    loadingState\n  } = _ref;\n  const [value, setValue] = useState(0);\n  const _handleTabs = (e, val) => {\n    setValue(val);\n  };\n  function TabPanel(props) {\n    const {\n      children,\n      value,\n      index\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value === index && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  }\n\n  // Filter data based on the selected tab value.\n  const filteredData = tabIndex => {\n    if (tabIndex === 0) {\n      return data; // Show all data for the \"All\" tab.\n    } else {\n      const tabLabel = [\"Rock\", \"Pop\", \"Jazz\", \"Blues\"][tabIndex - 1];\n      return data === null || data === void 0 ? void 0 : data.filter(item => {\n        var _item$genre;\n        return (item === null || item === void 0 ? void 0 : (_item$genre = item.genre) === null || _item$genre === void 0 ? void 0 : _item$genre.key) === (tabLabel === null || tabLabel === void 0 ? void 0 : tabLabel.toLowerCase());\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.filterSectionWrapper,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: \"divider\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: _handleTabs,\n          \"aria-label\": \"basic tabs\",\n          id: styles.tabs_wrapper,\n          children: allSongsTabs.map(each => /*#__PURE__*/_jsxDEV(Tab, {\n            label: each,\n            sx: {\n              color: \"white\"\n            }\n          }, each, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), allSongsTabs.map((_, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: index,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Section, {\n            data: filteredData(index),\n            type: \"songs\",\n            header: \"filterAll\",\n            loadingState: loadingState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_s(FilterTabs, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = FilterTabs;\nexport default FilterTabs;\nvar _c;\n$RefreshReg$(_c, \"FilterTabs\");","map":{"version":3,"names":["React","useState","Tabs","Tab","Box","Section","styles","allSongsTabs","Fragment","_Fragment","jsxDEV","_jsxDEV","FilterTabs","_ref","_s","data","loadingState","value","setValue","_handleTabs","e","val","TabPanel","props","children","index","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","tabIndex","tabLabel","filter","item","_item$genre","genre","key","toLowerCase","className","filterSectionWrapper","sx","width","borderBottom","borderColor","onChange","id","tabs_wrapper","map","each","label","color","_","type","header","_c","$RefreshReg$"],"sources":["D:/Programming/VS Code/QTify_Box/src/components/FilterTabs/FilterTabs.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Section from \"../Section/Section\";\r\nimport styles from \"./FilterTabs.module.css\";\r\nimport { allSongsTabs } from \"../../config/helper-config\";\r\n\r\nconst FilterTabs = ({ data, loadingState }) => {\r\n\tconst [value, setValue] = useState(0);\r\n\r\n\tconst _handleTabs = (e, val) => {\r\n\t\tsetValue(val);\r\n\t};\r\n\r\n\tfunction TabPanel(props) {\r\n\t\tconst { children, value, index } = props;\r\n\t\treturn <div>{value === index && <>{children}</>}</div>;\r\n\t}\r\n\r\n\t// Filter data based on the selected tab value.\r\n\tconst filteredData = (tabIndex) => {\r\n\t\tif (tabIndex === 0) {\r\n\t\t\treturn data; // Show all data for the \"All\" tab.\r\n\t\t} else {\r\n\t\t\tconst tabLabel = [\"Rock\", \"Pop\", \"Jazz\", \"Blues\"][tabIndex - 1];\r\n\t\t\treturn data?.filter(\r\n\t\t\t\t(item) => item?.genre?.key === tabLabel?.toLowerCase()\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.filterSectionWrapper}>\r\n\t\t\t<Box sx={{ width: \"100%\" }}>\r\n\t\t\t\t<Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tonChange={_handleTabs}\r\n\t\t\t\t\t\taria-label=\"basic tabs\"\r\n\t\t\t\t\t\tid={styles.tabs_wrapper}>\r\n\t\t\t\t\t\t{allSongsTabs.map((each) => (\r\n\t\t\t\t\t\t\t<Tab label={each} key={each} sx={{ color: \"white\" }} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t{allSongsTabs.map((_, index) => (\r\n\t\t\t\t\t<TabPanel key={index} value={value} index={index}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Section\r\n\t\t\t\t\t\t\t\tdata={filteredData(index)}\r\n\t\t\t\t\t\t\t\ttype=\"songs\"\r\n\t\t\t\t\t\t\t\theader={\"filterAll\"}\r\n\t\t\t\t\t\t\t\tloadingState={loadingState}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t))}\r\n\t\t\t</Box>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FilterTabs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}